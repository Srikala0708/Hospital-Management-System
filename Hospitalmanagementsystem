package HospitalManagementSystem;

import java.sql.*;
import java.util.Scanner;

public class HospitalManagementSystem {
    private static final String url="jdbc:mysql://localhost:3306/hospital";
    private static final String username="root";
    private static final String password="password123";
    public static void main(String [] args){
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");

        }
        catch(ClassNotFoundException e){
            e.printStackTrace();
        }
        Scanner scanner =new Scanner(System.in);
        try{
            Connection connection = DriverManager.getConnection(url,username,password);
            Patient patient=new Patient(connection,scanner);
            Doctor doctor=new Doctor(connection);
            while(true){
                System.out.println("Hospital Management System");
                System.out.println("1.Add Patient");
                System.out.println("2.View Patient");
                System.out.println("3.View Doctors");
                System.out.println("4.Book Appointment");
                System.out.println("5.Exit");
                System.out.println("Enter your choice: ");
                int choice=scanner.nextInt();
                switch(choice){
                    case 1:
                        patient.addPatient();
                        System.out.println();
                        break;
                    case 2:
                        patient.viewPatients();
                        System.out.println();
                        break;
                    case 3:
                        doctor.viewDoctors();
                        System.out.println();
                        break;
                    case 4:
                        bookappointment(patient,doctor,connection,scanner);
                        System.out.println();
                        break;
                    case 5:
                        return;
                    default:
                        System.out.println("Enter valid Choice");
                        break;
                }
            }

        }
        catch(SQLException e){
            e.printStackTrace();
        }
    }
    public static void  bookappointment(Patient patient ,Doctor doctor,Connection connection,Scanner scanner){
        System.out.print("Enter Patient ID: ");
        int patientid=scanner.nextInt();
        System.out.print("Enter Doctor Id: ");
        int doctorid=scanner.nextInt();
        System.out.print("Enter appointment date(YYYY-MM-DD): ");
        String appointmentdate=scanner.next();
        if(patient.getPatientById(patientid) && doctor.getDoctorById(doctorid)){
            if(checkDoctorAvailability(doctorid,appointmentdate,connection)){
                String appointmentQuery="Insert into appointments(patient_id,doctor_id,appointment_date) values(?,?,?)";
                try{
                    PreparedStatement preparedStatement= connection.prepareStatement(appointmentQuery);
                    preparedStatement.setInt(1,patientid);
                    preparedStatement.setInt(2,doctorid);
                    preparedStatement.setString(3,appointmentdate);
                    int rowsaffected= preparedStatement.executeUpdate();
                    if(rowsaffected>0){
                        System.out.println("Appointment Booked");
                    }
                    else{
                        System.out.println("Failed to book an appointment");
                    }


                }catch(SQLException e){
                    e.printStackTrace();
                }
            }
            else{
                System.out.println("Doctor is not available");
            }
        }
        else{
            System.out.println("Either patient or doctor does not exist");
        }
    }
    public static boolean checkDoctorAvailability(int doctorid,String appointmentdate,Connection connection){
        String query="Select count(*) from appointments where doctor_id=? and appointment_date=?";

        try{
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setInt(1,doctorid);
            preparedStatement.setString(2,appointmentdate);
            ResultSet resultSet= preparedStatement.executeQuery();
            if(resultSet.next()){
                int count=resultSet.getInt(1);
                if(count==0){
                    return  true;
                }
                else{
                    return false;
                }
            }
        }
        catch(SQLException e){
            e.printStackTrace();
        }
        return false;
    }

}
